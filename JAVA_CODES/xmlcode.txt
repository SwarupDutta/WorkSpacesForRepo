package com.test;

import java.io.*;
import java.net.MalformedURLException;
import java.net.URL;

import org.w3c.dom.*;

import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.stream.*;
import javax.xml.transform.dom.*;

public class ToXML {

	BufferedReader in;
	StreamResult out;

	Document xmldoc;
	Element root;
	Attr attribute;

	public static void main(String args[]) {
		new ToXML().doit();
	}

	public void doit() {
		try {
			in = new BufferedReader(new FileReader("data.txt"));
			out = new StreamResult("data.xml");
			initXML();
			String str;
			while ((str = in.readLine()) != null) {
				//System.out.println(str);
				process(str);
			}
			in.close();
			writeXML();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void initXML() throws ParserConfigurationException, MalformedURLException {
		// JAXP + DOM
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		factory.setNamespaceAware(true);

		DocumentBuilder builder = factory.newDocumentBuilder();
		DOMImplementation impl = builder.getDOMImplementation();

		


		xmldoc = impl.createDocument("http://java.sun.com/products/oss/xml/ServiceActivation", "ROOTTAG", null);
		
		
		
		root = xmldoc.getDocumentElement();
		
		
	}

	public void process(String s) {
		// Since the separator character "|" has special meaning
		// with regular expression, we need to escape it.
		String[] elements = s.split("\\=");
		Element e0 = xmldoc.createElement("mslv-sa:serviceValue");
		//String name="xsi:type";
		//e0.setAttribute(name, "mslv-sa:ASAPServiceValue");
		root.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:mslv-sa", "http://www.metasolv.com/oss/ServiceActivation/2003");
		root.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:xsi", "http://www.w3.org/2001/XMLSchema");
		
	    attribute = xmldoc.createAttribute("xsi:type");
		attribute.setValue("mslv-sa:ASAPServiceValue");
		e0.setAttributeNode(attribute);

		Element e1 = xmldoc.createElement("TITLE");
		//System.out.println(elements[0]);
		Node n1 = xmldoc.createTextNode(elements[0]);
		e1.appendChild(n1);

		Element e2 = xmldoc.createElement("VALUE");
		Node n2 = xmldoc.createTextNode(elements[1]);
		e2.appendChild(n2);

		e0.appendChild(e1);
		e0.appendChild(e2);
		root.appendChild(e0);
	}

	public void writeXML() throws TransformerConfigurationException,
          TransformerException {
    DOMSource domSource = new DOMSource(xmldoc);
    TransformerFactory tf = TransformerFactory.newInstance();
    Transformer transformer = tf.newTransformer();
    //transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
    transformer.setOutputProperty(OutputKeys.METHOD, "xml");
    transformer.setOutputProperty(OutputKeys.ENCODING,"ISO-8859-1");
    // we want to pretty format the XML output
    // note : this is broken in jdk1.5 beta!
    transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");
    transformer.setOutputProperty(OutputKeys.INDENT, "yes");
    //
    transformer.transform(domSource, out);
    
      //get the XML in a String
          java.io.StringWriter sw = new java.io.StringWriter();
          StreamResult sr = new StreamResult(sw);
          transformer.transform(domSource, sr);
          System.out.println(sw.toString()); 
     
  }
}



<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<ROOTTAG xmlns:mslv-sa="http://www.metasolv.com/oss/ServiceActivation/2003" xmlns:xsi="http://www.w3.org/2001/XMLSchema" xmlns="http://java.sun.com/products/oss/xml/ServiceActivation">
    <mslv-sa:serviceValue xsi:type="mslv-sa:ASAPServiceValue">
        <TITLE>Java</TITLE>
        <VALUE>Swarup</VALUE>
    </mslv-sa:serviceValue>
    <mslv-sa:serviceValue xsi:type="mslv-sa:ASAPServiceValue">
        <TITLE>Oracle</TITLE>
        <VALUE>Saptarshi</VALUE>
    </mslv-sa:serviceValue>
    <mslv-sa:serviceValue xsi:type="mslv-sa:ASAPServiceValue">
        <TITLE>Asap</TITLE>
        <VALUE>Parivesh</VALUE>
    </mslv-sa:serviceValue>
    <mslv-sa:serviceValue xsi:type="mslv-sa:ASAPServiceValue">
        <TITLE>Ipsa</TITLE>
        <VALUE>Madhu</VALUE>
    </mslv-sa:serviceValue>
    <mslv-sa:serviceValue xsi:type="mslv-sa:ASAPServiceValue">
        <TITLE>Mysql</TITLE>
        <VALUE>Saudamini</VALUE>
    </mslv-sa:serviceValue>
    <mslv-sa:serviceValue xsi:type="mslv-sa:ASAPServiceValue">
        <TITLE>C++</TITLE>
        <VALUE>Anil</VALUE>
    </mslv-sa:serviceValue>
</ROOTTAG>



Java=Swarup
Oracle=Saptarshi
Asap=Parivesh
Ipsa=Madhu
Mysql=Saudamini
C++=Anil
